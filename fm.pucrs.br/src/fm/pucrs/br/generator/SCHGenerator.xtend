/*
 * generated by Xtext 2.12.0
 */
package fm.pucrs.br.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

import fm.pucrs.br.sCH.Program
import fm.pucrs.br.sCH.Atom
import fm.pucrs.br.sCH.List
import fm.pucrs.br.services.SCHGrammarAccess.AtomElements

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class SCHGenerator extends AbstractGenerator {
override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
	fsa.generateFile('Schemer.java', resource.start);
}
//«»

def start(Resource r) '''
// Generated By Felipe Guedes and Guilherme Maluf
package default;

public class Schemer{
public static void main(String[] args) throws Exception {
	«FOR p : r.allContents.toIterable.filter(Program)»
		« FOR e : p.expressions »
			«e.compile»
		«ENDFOR» 
	«ENDFOR» 
	}
}
'''

def dispatch compile(Atom at) '''
	«at.ivalue» «at.bvalue»	
'''

def dispatch compile(List li) '''
	«li.called»( «FOR p : li.params» «p.compile», «ENDFOR» );
'''
}