/**
 * generated by Xtext 2.12.0
 */
package fm.pucrs.br.sCH;


/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>If</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link fm.pucrs.br.sCH.If#getLogicEx <em>Logic Ex</em>}</li>
 *   <li>{@link fm.pucrs.br.sCH.If#getTrueEx <em>True Ex</em>}</li>
 *   <li>{@link fm.pucrs.br.sCH.If#getFalseEx <em>False Ex</em>}</li>
 * </ul>
 *
 * @see fm.pucrs.br.sCH.SCHPackage#getIf()
 * @model
 * @generated
 */
public interface If extends Expression
{
  /**
   * Returns the value of the '<em><b>Logic Ex</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Logic Ex</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Logic Ex</em>' containment reference.
   * @see #setLogicEx(Expression)
   * @see fm.pucrs.br.sCH.SCHPackage#getIf_LogicEx()
   * @model containment="true"
   * @generated
   */
  Expression getLogicEx();

  /**
   * Sets the value of the '{@link fm.pucrs.br.sCH.If#getLogicEx <em>Logic Ex</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Logic Ex</em>' containment reference.
   * @see #getLogicEx()
   * @generated
   */
  void setLogicEx(Expression value);

  /**
   * Returns the value of the '<em><b>True Ex</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>True Ex</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>True Ex</em>' containment reference.
   * @see #setTrueEx(Expression)
   * @see fm.pucrs.br.sCH.SCHPackage#getIf_TrueEx()
   * @model containment="true"
   * @generated
   */
  Expression getTrueEx();

  /**
   * Sets the value of the '{@link fm.pucrs.br.sCH.If#getTrueEx <em>True Ex</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>True Ex</em>' containment reference.
   * @see #getTrueEx()
   * @generated
   */
  void setTrueEx(Expression value);

  /**
   * Returns the value of the '<em><b>False Ex</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>False Ex</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>False Ex</em>' containment reference.
   * @see #setFalseEx(Expression)
   * @see fm.pucrs.br.sCH.SCHPackage#getIf_FalseEx()
   * @model containment="true"
   * @generated
   */
  Expression getFalseEx();

  /**
   * Sets the value of the '{@link fm.pucrs.br.sCH.If#getFalseEx <em>False Ex</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>False Ex</em>' containment reference.
   * @see #getFalseEx()
   * @generated
   */
  void setFalseEx(Expression value);

} // If
