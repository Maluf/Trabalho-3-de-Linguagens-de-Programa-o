/**
 * generated by Xtext 2.12.0
 */
package fm.pucrs.br.sCH.impl;

import fm.pucrs.br.sCH.Expression;
import fm.pucrs.br.sCH.If;
import fm.pucrs.br.sCH.SCHPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fm.pucrs.br.sCH.impl.IfImpl#getLogicEx <em>Logic Ex</em>}</li>
 *   <li>{@link fm.pucrs.br.sCH.impl.IfImpl#getTrueEx <em>True Ex</em>}</li>
 *   <li>{@link fm.pucrs.br.sCH.impl.IfImpl#getFalseEx <em>False Ex</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfImpl extends ExpressionImpl implements If
{
  /**
   * The cached value of the '{@link #getLogicEx() <em>Logic Ex</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLogicEx()
   * @generated
   * @ordered
   */
  protected Expression logicEx;

  /**
   * The cached value of the '{@link #getTrueEx() <em>True Ex</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrueEx()
   * @generated
   * @ordered
   */
  protected Expression trueEx;

  /**
   * The cached value of the '{@link #getFalseEx() <em>False Ex</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFalseEx()
   * @generated
   * @ordered
   */
  protected Expression falseEx;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SCHPackage.Literals.IF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getLogicEx()
  {
    return logicEx;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLogicEx(Expression newLogicEx, NotificationChain msgs)
  {
    Expression oldLogicEx = logicEx;
    logicEx = newLogicEx;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SCHPackage.IF__LOGIC_EX, oldLogicEx, newLogicEx);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLogicEx(Expression newLogicEx)
  {
    if (newLogicEx != logicEx)
    {
      NotificationChain msgs = null;
      if (logicEx != null)
        msgs = ((InternalEObject)logicEx).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SCHPackage.IF__LOGIC_EX, null, msgs);
      if (newLogicEx != null)
        msgs = ((InternalEObject)newLogicEx).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SCHPackage.IF__LOGIC_EX, null, msgs);
      msgs = basicSetLogicEx(newLogicEx, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCHPackage.IF__LOGIC_EX, newLogicEx, newLogicEx));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getTrueEx()
  {
    return trueEx;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTrueEx(Expression newTrueEx, NotificationChain msgs)
  {
    Expression oldTrueEx = trueEx;
    trueEx = newTrueEx;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SCHPackage.IF__TRUE_EX, oldTrueEx, newTrueEx);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTrueEx(Expression newTrueEx)
  {
    if (newTrueEx != trueEx)
    {
      NotificationChain msgs = null;
      if (trueEx != null)
        msgs = ((InternalEObject)trueEx).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SCHPackage.IF__TRUE_EX, null, msgs);
      if (newTrueEx != null)
        msgs = ((InternalEObject)newTrueEx).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SCHPackage.IF__TRUE_EX, null, msgs);
      msgs = basicSetTrueEx(newTrueEx, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCHPackage.IF__TRUE_EX, newTrueEx, newTrueEx));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Expression getFalseEx()
  {
    return falseEx;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFalseEx(Expression newFalseEx, NotificationChain msgs)
  {
    Expression oldFalseEx = falseEx;
    falseEx = newFalseEx;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SCHPackage.IF__FALSE_EX, oldFalseEx, newFalseEx);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFalseEx(Expression newFalseEx)
  {
    if (newFalseEx != falseEx)
    {
      NotificationChain msgs = null;
      if (falseEx != null)
        msgs = ((InternalEObject)falseEx).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SCHPackage.IF__FALSE_EX, null, msgs);
      if (newFalseEx != null)
        msgs = ((InternalEObject)newFalseEx).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SCHPackage.IF__FALSE_EX, null, msgs);
      msgs = basicSetFalseEx(newFalseEx, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCHPackage.IF__FALSE_EX, newFalseEx, newFalseEx));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SCHPackage.IF__LOGIC_EX:
        return basicSetLogicEx(null, msgs);
      case SCHPackage.IF__TRUE_EX:
        return basicSetTrueEx(null, msgs);
      case SCHPackage.IF__FALSE_EX:
        return basicSetFalseEx(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SCHPackage.IF__LOGIC_EX:
        return getLogicEx();
      case SCHPackage.IF__TRUE_EX:
        return getTrueEx();
      case SCHPackage.IF__FALSE_EX:
        return getFalseEx();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SCHPackage.IF__LOGIC_EX:
        setLogicEx((Expression)newValue);
        return;
      case SCHPackage.IF__TRUE_EX:
        setTrueEx((Expression)newValue);
        return;
      case SCHPackage.IF__FALSE_EX:
        setFalseEx((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SCHPackage.IF__LOGIC_EX:
        setLogicEx((Expression)null);
        return;
      case SCHPackage.IF__TRUE_EX:
        setTrueEx((Expression)null);
        return;
      case SCHPackage.IF__FALSE_EX:
        setFalseEx((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SCHPackage.IF__LOGIC_EX:
        return logicEx != null;
      case SCHPackage.IF__TRUE_EX:
        return trueEx != null;
      case SCHPackage.IF__FALSE_EX:
        return falseEx != null;
    }
    return super.eIsSet(featureID);
  }

} //IfImpl
