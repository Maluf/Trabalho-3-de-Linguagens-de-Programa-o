/**
 * generated by Xtext 2.13.0
 */
package fm.pucrs.br.sCH.impl;

import fm.pucrs.br.sCH.Atom;
import fm.pucrs.br.sCH.SCHPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Atom</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link fm.pucrs.br.sCH.impl.AtomImpl#getName <em>Name</em>}</li>
 *   <li>{@link fm.pucrs.br.sCH.impl.AtomImpl#getIvalue <em>Ivalue</em>}</li>
 *   <li>{@link fm.pucrs.br.sCH.impl.AtomImpl#getBvalue <em>Bvalue</em>}</li>
 *   <li>{@link fm.pucrs.br.sCH.impl.AtomImpl#getDvalue <em>Dvalue</em>}</li>
 *   <li>{@link fm.pucrs.br.sCH.impl.AtomImpl#getSvalue <em>Svalue</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class AtomImpl extends ExpressionImpl implements Atom
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getIvalue() <em>Ivalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIvalue()
   * @generated
   * @ordered
   */
  protected static final int IVALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getIvalue() <em>Ivalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIvalue()
   * @generated
   * @ordered
   */
  protected int ivalue = IVALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getBvalue() <em>Bvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBvalue()
   * @generated
   * @ordered
   */
  protected static final String BVALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBvalue() <em>Bvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBvalue()
   * @generated
   * @ordered
   */
  protected String bvalue = BVALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getDvalue() <em>Dvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDvalue()
   * @generated
   * @ordered
   */
  protected static final String DVALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDvalue() <em>Dvalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDvalue()
   * @generated
   * @ordered
   */
  protected String dvalue = DVALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getSvalue() <em>Svalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSvalue()
   * @generated
   * @ordered
   */
  protected static final String SVALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSvalue() <em>Svalue</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSvalue()
   * @generated
   * @ordered
   */
  protected String svalue = SVALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AtomImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SCHPackage.Literals.ATOM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCHPackage.ATOM__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getIvalue()
  {
    return ivalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIvalue(int newIvalue)
  {
    int oldIvalue = ivalue;
    ivalue = newIvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCHPackage.ATOM__IVALUE, oldIvalue, ivalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getBvalue()
  {
    return bvalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBvalue(String newBvalue)
  {
    String oldBvalue = bvalue;
    bvalue = newBvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCHPackage.ATOM__BVALUE, oldBvalue, bvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDvalue()
  {
    return dvalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDvalue(String newDvalue)
  {
    String oldDvalue = dvalue;
    dvalue = newDvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCHPackage.ATOM__DVALUE, oldDvalue, dvalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSvalue()
  {
    return svalue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSvalue(String newSvalue)
  {
    String oldSvalue = svalue;
    svalue = newSvalue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SCHPackage.ATOM__SVALUE, oldSvalue, svalue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SCHPackage.ATOM__NAME:
        return getName();
      case SCHPackage.ATOM__IVALUE:
        return getIvalue();
      case SCHPackage.ATOM__BVALUE:
        return getBvalue();
      case SCHPackage.ATOM__DVALUE:
        return getDvalue();
      case SCHPackage.ATOM__SVALUE:
        return getSvalue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SCHPackage.ATOM__NAME:
        setName((String)newValue);
        return;
      case SCHPackage.ATOM__IVALUE:
        setIvalue((Integer)newValue);
        return;
      case SCHPackage.ATOM__BVALUE:
        setBvalue((String)newValue);
        return;
      case SCHPackage.ATOM__DVALUE:
        setDvalue((String)newValue);
        return;
      case SCHPackage.ATOM__SVALUE:
        setSvalue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SCHPackage.ATOM__NAME:
        setName(NAME_EDEFAULT);
        return;
      case SCHPackage.ATOM__IVALUE:
        setIvalue(IVALUE_EDEFAULT);
        return;
      case SCHPackage.ATOM__BVALUE:
        setBvalue(BVALUE_EDEFAULT);
        return;
      case SCHPackage.ATOM__DVALUE:
        setDvalue(DVALUE_EDEFAULT);
        return;
      case SCHPackage.ATOM__SVALUE:
        setSvalue(SVALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SCHPackage.ATOM__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case SCHPackage.ATOM__IVALUE:
        return ivalue != IVALUE_EDEFAULT;
      case SCHPackage.ATOM__BVALUE:
        return BVALUE_EDEFAULT == null ? bvalue != null : !BVALUE_EDEFAULT.equals(bvalue);
      case SCHPackage.ATOM__DVALUE:
        return DVALUE_EDEFAULT == null ? dvalue != null : !DVALUE_EDEFAULT.equals(dvalue);
      case SCHPackage.ATOM__SVALUE:
        return SVALUE_EDEFAULT == null ? svalue != null : !SVALUE_EDEFAULT.equals(svalue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", ivalue: ");
    result.append(ivalue);
    result.append(", bvalue: ");
    result.append(bvalue);
    result.append(", dvalue: ");
    result.append(dvalue);
    result.append(", svalue: ");
    result.append(svalue);
    result.append(')');
    return result.toString();
  }

} //AtomImpl
