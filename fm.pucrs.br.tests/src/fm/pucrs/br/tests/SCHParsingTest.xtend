/*
 * generated by Xtext 2.12.0
 */
package fm.pucrs.br.tests

import com.google.inject.Inject
import fm.pucrs.br.sCH.Model
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(XtextRunner)
@InjectWith(SCHInjectorProvider)
class SCHParsingTest {
	@Inject
	ParseHelper<Model> parseHelper
	
	@Test
	def void loadModel1() {
		val result = parseHelper.parse('''
			(/ 3 3)
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	@Test
	def void loadModel2() {
		val result = parseHelper.parse('''
			(* 3 3 3 3 3)
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	@Test
	def void loadModel3() {
		val result = parseHelper.parse('''
			(+ 2)
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	@Test
	def void loadModel4() {
		val result = parseHelper.parse('''
			(+ 3 (* 3 ) )
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	@Test
	def void loadModel5() {
		val result = parseHelper.parse('''
			2
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
	@Test
	def void loadModel6() {
		val result = parseHelper.parse('''
			#f
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
	@Test
	def void loadModel7() {
		val result = parseHelper.parse('''
			(if (< 3 4) (+ 33) (* 3 4))
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
	@Test
	def void loadModel8() {
		val result = parseHelper.parse('''
			(define a 3)
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
	@Test
	def void loadModel9() {
		val result = parseHelper.parse('''
			(lambda (a b) (* a b) )
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
}
